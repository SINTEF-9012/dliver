/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.thingml.dliver.desktop;

import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import org.thingml.dliver.driver.Dliver;

/**
 *
 * @author nkm
 */
public class WearableFileHandlerFrame extends javax.swing.JFrame {

    protected Dliver belt;
    protected WearableFileHandler handler;
    
    DefaultTableModel model;
    static int idx = 0;

    /**
     * Creates new form WearableFileHandlerFrame
     * @param b
     */
    public WearableFileHandlerFrame(Dliver b) {
        initComponents();
        
        this.belt = b;
        this.handler = new WearableFileHandler(belt, this);
        
        String[] columns = {"File", "Size", "Date", "Time"};
        model = (DefaultTableModel) jTableFiles.getModel();
        model.setColumnIdentifiers(columns);
        
        
    }


    // Make new entry in table
    void UpdateSensorFiles(String filename, String filesize, String date, String time) {
        model.addRow(new String[] {filename, filesize, date, time});
    }

    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonPlaybackFromFile = new javax.swing.JButton();
        jButtonListFiles = new javax.swing.JButton();
        jButtonReadFile = new javax.swing.JButton();
        jButtonDeleteFile = new javax.swing.JButton();
        jButtonDeleteAll = new javax.swing.JButton();
        jButtonStartRecording = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableFiles = new javax.swing.JTable();
        jButtonCreateFile = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextFileName = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Wearable Files");

        jButtonPlaybackFromFile.setText("Playback From File");
        jButtonPlaybackFromFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPlaybackFromFileActionPerformed(evt);
            }
        });

        jButtonListFiles.setText("List Files");
        jButtonListFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListFilesActionPerformed(evt);
            }
        });

        jButtonReadFile.setText("Read File");
        jButtonReadFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReadFileActionPerformed(evt);
            }
        });

        jButtonDeleteFile.setText("Delete File");
        jButtonDeleteFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteFileActionPerformed(evt);
            }
        });

        jButtonDeleteAll.setText("Delete All");
        jButtonDeleteAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteAllActionPerformed(evt);
            }
        });

        jButtonStartRecording.setText("Start Recording");
        jButtonStartRecording.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartRecordingActionPerformed(evt);
            }
        });

        jTableFiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "File", "Size", "Date", "Time"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableFiles.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane3.setViewportView(jTableFiles);

        jButtonCreateFile.setText("Create File");
        jButtonCreateFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateFileActionPerformed(evt);
            }
        });

        jTextFileName.setText("LogFile.log");
        jScrollPane2.setViewportView(jTextFileName);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonListFiles, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonReadFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDeleteFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDeleteAll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonStartRecording, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPlaybackFromFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCreateFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonCreateFile)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonListFiles)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonReadFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteFile)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonDeleteAll)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonStartRecording)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonPlaybackFromFile))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPlaybackFromFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPlaybackFromFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonPlaybackFromFileActionPerformed

    private void jButtonListFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListFilesActionPerformed
        handler.CommandRequestFileList();
    }//GEN-LAST:event_jButtonListFilesActionPerformed

    private void jButtonReadFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReadFileActionPerformed
        int row = jTableFiles.getSelectedRow();
        if (row == -1) {
            // No row has been selected
            return;
        }
        String filename = model.getValueAt(row, 0).toString();
        System.out.println("Name: " + filename);
        handler.CommandRequestFile(filename);
    }//GEN-LAST:event_jButtonReadFileActionPerformed

    private void jButtonDeleteFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteFileActionPerformed
        int row = jTableFiles.getSelectedRow();
        if (row == -1) {
            // No row has been selected
            return;
        }
        String filename = model.getValueAt(row, 0).toString();
        System.out.println("Name: " + filename);
        
        // NOTE: Need to confirm before deleting
        handler.CommandRequestFile(filename);
//        EraseFileConfirmDialog dialog = new EraseFileConfirmDialog(this, true, belt);
//        dialog.setLocationRelativeTo(this);
//        dialog.pack();
//        dialog.setVisible(true);
    }//GEN-LAST:event_jButtonDeleteFileActionPerformed

    private void jButtonDeleteAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteAllActionPerformed
        // NOTE: Need to confirm before deleting
        handler.CommandRequestDeleteAll();
    }//GEN-LAST:event_jButtonDeleteAllActionPerformed

    private void jButtonStartRecordingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartRecordingActionPerformed
        // TODO add your handling code here:
        // NOTE:THIS COULD CALL EXISTING RECORDING HANDLING!
    }//GEN-LAST:event_jButtonStartRecordingActionPerformed

    private void jButtonCreateFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateFileActionPerformed
        handler.CommandCreateFile(jTextFileName.getText());
        model.addRow(new String[] {(jTextFileName.getText() + Integer.toString(idx++)), Integer.toString((int) (Math.random()*10000))});
    }//GEN-LAST:event_jButtonCreateFileActionPerformed

//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(WearableFileHandlerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(WearableFileHandlerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(WearableFileHandlerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(WearableFileHandlerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new WearableFileHandlerFrame().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreateFile;
    private javax.swing.JButton jButtonDeleteAll;
    private javax.swing.JButton jButtonDeleteFile;
    private javax.swing.JButton jButtonListFiles;
    private javax.swing.JButton jButtonPlaybackFromFile;
    private javax.swing.JButton jButtonReadFile;
    private javax.swing.JButton jButtonStartRecording;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableFiles;
    private javax.swing.JTextPane jTextFileName;
    // End of variables declaration//GEN-END:variables
}
